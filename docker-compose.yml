version: "3.5"
services:
  db:
    image: postgres:15
    container_name: db
    hostname: db
    network_mode: host
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: rinha
    ports:
      - "5432:5432"
    expose:
      - "5432"
    deploy:
      resources:
        limits:
          cpus: "0.7"
          memory: "1GB"
    volumes:
      - ./scripts/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./scripts/database/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 15s
      timeout: 25s
      retries: 20
      start_period: 10s
    command:
      [
        "postgres",
        "-c",
        "config_file=/docker-entrypoint-initdb.d/postgresql.conf"
      ]

  api1:
    network_mode: "host"
    build: .
    restart: always
    hostname: api1
    environment:
      - ENABLE_SONIC_JSON=1
      - DB_HOST=localhost
      - DB_DRIVER=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rinha
      - DB_PORT=5432
      - CPU_PROFILE=/app/prof/cpu-1.prof
      - MEM_PROFILE=/app/prof/mem-1.prof
      - CACHE_HOST=cache
      - CACHE_PORT=6379
      - SERVER_PORT=8080
      - ENABLE_PROFILING=0
      - ENABLE_PREFORK=0
    volumes:
      - ./prof:/app/prof
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "0.5GB"

  api2:
    restart: always
    build: .
    network_mode: "host"
    hostname: api2
    environment:
      - ENABLE_SONIC_JSON=1
      - DB_HOST=localhost
      - DB_DRIVER=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rinha
      - DB_PORT=5432
      - CPU_PROFILE=/app/prof/cpu-1.prof
      - MEM_PROFILE=/app/prof/mem-1.prof
      - CACHE_HOST=redis
      - CACHE_PORT=6379
      - SERVER_PORT=8081
      - ENABLE_PROFILING=0
      - ENABLE_PREFORK=0
    volumes:
      - ./prof:/app/prof
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "0.5GB"
  nginx:
    image: nginx
    hostname: api
    network_mode: host
    volumes:
      - ./scripts/nginx/:/etc/nginx/
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"
  # redis:
  #   image: redis:latest
  #   hostname: redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - ./scripts/redis/:/etc/redis/
  #   command: [ "redis-server", "/etc/redis/redis.conf" ]
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.15"
  #         memory: "0.5GB"
volumes:
  postgres-db:


networks:
  default:
    driver: bridge
